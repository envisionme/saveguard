<?php
// $Id: saveguard.module,v 1.4.2.2 2008/12/12 21:44:21 deekayen Exp $

/**
 * @file
 * Warn user when they are leaving a page with unsaved changes.
 *
 * Adds a onBeforeUnload event to all modified forms.
 */

/**
 * Implementation of hook_menu().
 */
function saveguard_menu() {
  $items['admin/settings/saveguard'] = array(
    'title' => 'SaveGuard',
    'description' => 'Set the popup message text.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('saveguard_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration')
  );

  return $items;
}

/**
 * Define a settings form.
 */
function saveguard_admin_settings() {
  $form = array();

  $form['saveguard_message'] = array(
    '#type' => 'textfield',
    '#title' => t("Popup Message"),
    '#default_value' => variable_get('saveguard_message', NULL),
  );

  return system_settings_form($form);
}


/**
 * Implementation of hook_form_alter().
 * Just add javascript to all forms.
 *
 * @param $form_id
 *    name of the form being acted on
 * @param $form
 *    array with form structure
 */
function saveguard_form_alter(&$form, $form_state, $form_id) {
		
	if($form_id == 'node_type_form'){	
	  $options = array(0 => t('Disabled'), 1 => t('Enabled'));					
		$form['save_guard'] = array(
			'#type' => 'fieldset',
			'#title' => t('Safe Guard'),
			'#collapsible' => TRUE,
			'#collapsed' => TRUE,
			'#access' => user_access('administer safeguard'),
		);
		
		$form['save_guard']['save_guard_expose'] = array(
			'#type' => 'radios',
			'#title' => t('Enable Save Guard for this form'),
			'#default_value' => variable_get('save_guard_expose_' . $form['#node_type']->type, 0),
			'#description' => t('Enable/Disable SaveGuard for this form.'),
			'#options' => $options,
			'#weight' => -1,
		);

	}
	elseif (isset($form['#node']) && $form['#node']->type .'_node_form' == $form_id && is_save_guard_form($form['#node']) && arg(0) != 'signup') {
		drupal_add_js(drupal_get_path('module', 'saveguard') .'/saveguard.js');
		static $done;
		if (!$done) {
			$settings['saveguard'] = array(
				'msg' => variable_get('saveguard_message', NULL),
			);
			drupal_add_js($settings, 'setting');
			$done = TRUE;
		}
	}
}

/**
 * Determine if a given node is a SaveGuard Form.
 * @param $type
 *   The node object or the node's type
 */
function is_save_guard_form($type) {
  if (is_object($type)) {
    $type = $type->type;
  }
  return variable_get('save_guard_expose_'. $type, 0);
}